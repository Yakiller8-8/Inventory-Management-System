package InventoryMenu;
import Functions.dbConnection;
import Functions.Download;
import LoginMenu.Login;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.FontFactory;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.sql.*;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yali_il
 */
public class manageInventory extends javax.swing.JFrame {

    /**
     * Creates new form manageInventory
     */
    public manageInventory() {
        initComponents();
        Toolkit toolkit  = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 - getHeight()/2);
        SelectItem();
        getCategory();
        getUnit();
        tableResizer();
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        inventory = new javax.swing.JButton();
        categories = new javax.swing.JButton();
        suppliers = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        unit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        iname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sprice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cprice = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        importbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        categorycb = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        itemid = new javax.swing.JTextField();
        jTextFieldSearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        unitcb = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        exportbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 21)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(183, 76, 76));
        jLabel1.setText("Inventory Management System");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(183, 76, 76));
        jButton1.setText("Get User Guide");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(183, 76, 76));

        inventory.setBackground(new java.awt.Color(255, 255, 255));
        inventory.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        inventory.setForeground(new java.awt.Color(183, 76, 76));
        inventory.setText("Inventory");
        inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryActionPerformed(evt);
            }
        });

        categories.setBackground(new java.awt.Color(183, 76, 76));
        categories.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        categories.setForeground(new java.awt.Color(255, 255, 255));
        categories.setText("Category");
        categories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesActionPerformed(evt);
            }
        });

        suppliers.setBackground(new java.awt.Color(183, 76, 76));
        suppliers.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        suppliers.setForeground(new java.awt.Color(255, 255, 255));
        suppliers.setText("Supplier");
        suppliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliersActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(183, 76, 76));
        logout.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        unit.setBackground(new java.awt.Color(183, 76, 76));
        unit.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        unit.setForeground(new java.awt.Color(255, 255, 255));
        unit.setText("Unit");
        unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inventory, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
            .addComponent(categories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(unit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(suppliers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(categories, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(unit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 21)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(183, 76, 76));
        jLabel2.setText("Manage Inventory");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(183, 76, 76));
        jLabel4.setText("Selling price");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(183, 76, 76));
        jLabel5.setText("Quantity");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(183, 76, 76));
        jLabel6.setText("Category");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(183, 76, 76));
        jLabel7.setText("Cost price");

        addbtn.setBackground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbtnMouseClicked(evt);
            }
        });

        editbtn.setBackground(new java.awt.Color(255, 255, 255));
        editbtn.setText("Edit");
        editbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editbtnMouseClicked(evt);
            }
        });

        clearbtn.setBackground(new java.awt.Color(255, 255, 255));
        clearbtn.setText("Clear");
        clearbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearbtnMouseClicked(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebtnMouseClicked(evt);
            }
        });
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        importbtn.setBackground(new java.awt.Color(255, 255, 255));
        importbtn.setText("Import");
        importbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importbtnActionPerformed(evt);
            }
        });

        inventoryTable.setAutoCreateRowSorter(true);
        inventoryTable.setBackground(new java.awt.Color(255, 255, 255));
        inventoryTable.setForeground(new java.awt.Color(0, 0, 0));
        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Category", "Quantity", "Unit", "Cost price", "Total cost", "Selling price"
            }
        ));
        inventoryTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        inventoryTable.setFocusable(false);
        inventoryTable.setRowHeight(24);
        inventoryTable.setSelectionBackground(new java.awt.Color(183, 76, 76));
        inventoryTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        inventoryTable.setShowGrid(true);
        inventoryTable.getTableHeader().setResizingAllowed(false);
        inventoryTable.getTableHeader().setReorderingAllowed(false);
        inventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(inventoryTable);

        categorycb.setBackground(new java.awt.Color(255, 255, 255));
        categorycb.setForeground(new java.awt.Color(255, 255, 255));
        categorycb.setToolTipText("<html> To have more options for the category<br>Please click the 'Category' button</html>");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(183, 76, 76));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(183, 76, 76));
        jLabel9.setText("Item Name");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(183, 76, 76));
        jLabel10.setText("Item ID");

        jTextFieldSearch.setText("Search");
        jTextFieldSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldSearchMouseClicked(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(183, 76, 76));
        jLabel11.setText("Unit");

        unitcb.setBackground(new java.awt.Color(255, 255, 255));
        unitcb.setForeground(new java.awt.Color(255, 255, 255));
        unitcb.setToolTipText("<html> To have more options for the unit<br>Please click the 'Unit' button</html>");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imageIcon/search-interface-symbol.png"))); // NOI18N

        Refresh.setBackground(new java.awt.Color(255, 255, 255));
        Refresh.setText("Refresh");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        exportbtn.setBackground(new java.awt.Color(255, 255, 255));
        exportbtn.setText("Export");
        exportbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportbtnMouseClicked(evt);
            }
        });
        exportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportbtnActionPerformed(evt);
            }
        });

        itemid.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(382, 382, 382)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel11)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(iname, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(itemid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(154, 154, 154)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(unitcb, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(categorycb, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(31, 31, 31))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(importbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel4))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cprice)
                                            .addComponent(sprice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24))))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1027, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemid, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(iname, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(categorycb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(8, 8, 8)
                                            .addComponent(jLabel7)
                                            .addGap(48, 48, 48))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(cprice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(sprice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(unitcb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)))
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
        Login l = new Login();
        l.setVisible(true);
        setVisible(false);
        } 
        
    }//GEN-LAST:event_logoutActionPerformed

    private void categoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesActionPerformed
        // TODO add your handling code here:
        manageCategory ms = new manageCategory();
        ms.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_categoriesActionPerformed

    private void inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryActionPerformed
        // TODO add your handling code here:
        manageInventory mi = new manageInventory();
        mi.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_inventoryActionPerformed

    private void suppliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliersActionPerformed
        // TODO add your handling code here:
        manageSupplier mc = new manageSupplier();
        mc.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_suppliersActionPerformed
    
    
    Statement st = null;
    ResultSet rs = null;
    
    public void SelectItem(){
        try{
            st = dbConnection.getConnection().createStatement();
            rs = st.executeQuery("SELECT * FROM InventoryManagementSystem.inventory");
            inventoryTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch(Exception e){
                e.printStackTrace();
        }
    }
    public void getCategory(){
        try{
            st = dbConnection.getConnection().createStatement();
            String query = "SELECT * FROM InventoryManagementSystem.category";
            rs = st.executeQuery(query);
            while(rs.next()){
                String myCat = rs.getString("Category Name");
                categorycb.addItem(myCat);
            }
        } catch(Exception e){
                e.printStackTrace();
        }
    }
    public void getUnit(){
        try{
            st = dbConnection.getConnection().createStatement();
            String query = "SELECT * FROM InventoryManagementSystem.unit";
            rs = st.executeQuery(query);
            while(rs.next()){
                String unit = rs.getString("Unit name");
                unitcb.addItem(unit);
            }
        } catch(Exception e){
                e.printStackTrace();
        }
    }
    
    public void tableResizer(){
        TableColumnModel colmod = inventoryTable.getColumnModel();
        TableColumn TC_ItemID = colmod.getColumn(0);
        TC_ItemID.setPreferredWidth(20);
        TableColumn TC_ItemName = colmod.getColumn(1);
        TC_ItemName.setPreferredWidth(200);
        TableColumn TC_Category = colmod.getColumn(2);
        TC_Category.setPreferredWidth(50);
        TableColumn TC_ItemQuantity = colmod.getColumn(3);
        TC_ItemQuantity.setPreferredWidth(20);
        TableColumn TC_ItemUnit = colmod.getColumn(4);
        TC_ItemUnit.setPreferredWidth(30);
        TableColumn TC_Cprice = colmod.getColumn(5);
        TC_Cprice.setPreferredWidth(30);
        TableColumn TC_totalCost = colmod.getColumn(6);
        TC_totalCost.setPreferredWidth(30);
        TableColumn TC_sellingPrice = colmod.getColumn(7);
        TC_sellingPrice.setPreferredWidth(30);
    }
    private void addbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)inventoryTable.getModel();
        
        if (iname.getText().isEmpty()||quantity.getText().isEmpty()||cprice.getText().isEmpty()||sprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } else {
            String sql = "INSERT into InventoryManagementSystem.inventory VALUES(?,?,?,?,?,?,?,?)"; 
                try{
                PreparedStatement add  = dbConnection.getConnection().prepareStatement(sql);
                Statement stmt = dbConnection.getConnection().createStatement();
                ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM inventory");

                // Get the count from the result set
                int count = 1;
                int num  =  1;
                if (rs.next()) {
                    count = rs.getInt(1);
                    num = count+1;
                }
                
                add.setString(1,String.valueOf(num));
                add.setString(2,iname.getText());
                add.setString(3,categorycb.getSelectedItem().toString());
                add.setFloat(4,Float.valueOf(quantity.getText()));
                add.setString(5,unitcb.getSelectedItem().toString());
                add.setFloat(6,Float.valueOf(cprice.getText()));
                float tquantity = Integer.valueOf(quantity.getText());
                float tcprice = Float.valueOf((cprice.getText()));
                add.setFloat(7,tquantity*tcprice);
                add.setFloat(8,Float.valueOf(sprice.getText()));
                add.executeUpdate();
                

                JOptionPane.showMessageDialog(this, "Item Added Successfully");
                SelectItem(); 
                tableResizer();
                itemid.setText("");
                iname.setText("");
                quantity.setText("");
                cprice.setText("");
                sprice.setText("");
                } catch(Exception e){
                    e.printStackTrace();
                }
        }
    }//GEN-LAST:event_addbtnMouseClicked

    private void inventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)inventoryTable.getModel();
        int selectedRow = inventoryTable.getSelectedRow();
        if (selectedRow != -1) {
            int myindex = inventoryTable.convertRowIndexToModel(selectedRow);
            itemid.setText(model.getValueAt(myindex, 0).toString());
            iname.setText(model.getValueAt(myindex, 1).toString());
            categorycb.setSelectedItem(model.getValueAt(myindex,2).toString());
            quantity.setText(model.getValueAt(myindex, 3).toString());
            unitcb.setSelectedItem(model.getValueAt(myindex,4).toString());
            cprice.setText(model.getValueAt(myindex, 5).toString());
            sprice.setText(model.getValueAt(myindex,7).toString());
        }
    }//GEN-LAST:event_inventoryTableMouseClicked

    private void clearbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearbtnMouseClicked
         // TODO add your handling code here:
         itemid.setText("");
         iname.setText("");
         quantity.setText("");
         cprice.setText("");
         sprice.setText("");
         
    }//GEN-LAST:event_clearbtnMouseClicked

    private void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseClicked
        // TODO add your handling code here:
        if(iname.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter the item name to be deleted");
        } else{
            try{
                String id = itemid.getText();
                String query2 = "DELETE from InventoryManagementSystem.inventory where `Item ID` ="+id;
                Statement add = dbConnection.getConnection().createStatement();
                add.executeUpdate(query2);
                //
                String query = "SELECT `Item ID` FROM inventory WHERE `Item ID` > ?";
                PreparedStatement stmt = dbConnection.getConnection().prepareStatement(query);
                stmt.setInt(1, Integer.valueOf(id));
                ResultSet results = stmt.executeQuery();

                while (results.next()) {
                    int currentID = results.getInt(1);
                    int newID = currentID - 1;

                    // Update the corresponding row in the database
                    query = "UPDATE inventory SET `Item ID` = ? WHERE `Item ID` = ?";
                    PreparedStatement updateStmt = dbConnection.getConnection().prepareStatement(query);
                    updateStmt.setInt(1, newID);
                    updateStmt.setInt(2, currentID);
                    updateStmt.executeUpdate();
                }
      
                
                SelectItem();
                tableResizer();
                JOptionPane.showMessageDialog(this, "Item Successfully Deleted");
                itemid.setText("");
                iname.setText("");
                quantity.setText("");
                cprice.setText("");
                sprice.setText("");
                
                
            } catch(SQLException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deletebtnMouseClicked

    private void editbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editbtnMouseClicked
        // TODO add your handling code here:
        if (iname.getText().isEmpty()||quantity.getText().isEmpty()||cprice.getText().isEmpty()||sprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } else {
            try{
                String ItemID = itemid.getText();
                String Iname  = iname.getText();
                String Category  = categorycb.getSelectedItem().toString();
                String Quantity  = quantity.getText();
                String Unit  = unitcb.getSelectedItem().toString();
                String CPrice  = cprice.getText();
                String SPrice  = sprice.getText();
                float tquantity = Integer.valueOf(quantity.getText());
                float tcprice = Float.valueOf((cprice.getText()));
                float tp =  tquantity*tcprice;
                
                String query = "UPDATE inventory set `Item name`= '"+Iname+"',Category ='"+Category+"',Quantity='"+Quantity+"',Unit ='"+Unit+"',`Cost price ($)` ='"+CPrice+"',`Total cost ($)` ='"+tp+"', `Selling price ($)` ='"+SPrice+"'WHERE `Item ID` ='"+ItemID+"'";

                Statement add = dbConnection.getConnection().createStatement();
                add.executeUpdate(query);

                JOptionPane.showMessageDialog(this, "Item Updated");
                SelectItem();
                tableResizer();
                itemid.setText("");
                iname.setText("");
                quantity.setText("");
                cprice.setText("");
                sprice.setText("");
                
                } catch(SQLException e){
                    e.printStackTrace();
                }
        }
     
    }//GEN-LAST:event_editbtnMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "File is being downloaded\nPlease wait about 1 minute");
        Download d = new Download();
        d.pdfDownload();
        JOptionPane.showMessageDialog(this, "File is Downloaded\nPlease go check your Downloads to see the file");
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void importbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importbtnActionPerformed
        // TODO add your handling code here:
        manageInventoryImport mii = new manageInventoryImport();
        mii.setVisible(true);
        setVisible(false); 
    }//GEN-LAST:event_importbtnActionPerformed

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)inventoryTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tr.setRowFilter(RowFilter.regexFilter(jTextFieldSearch.getText().trim()));
        inventoryTable.setRowSorter(tr);
        int selectedRow = inventoryTable.getSelectedRow();
        if (selectedRow != -1) {
            int myindex = selectedRow;
            itemid.setText(model.getValueAt(myindex, 0).toString());
            iname.setText(model.getValueAt(myindex, 1).toString());
            categorycb.setSelectedItem(model.getValueAt(myindex,2).toString());
            quantity.setText(model.getValueAt(myindex, 3).toString());
            unitcb.setSelectedItem(model.getValueAt(myindex,4).toString());
            cprice.setText(model.getValueAt(myindex, 5).toString());
            sprice.setText(model.getValueAt(myindex,7).toString());
        }
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void jTextFieldSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldSearchMouseClicked
        // TODO add your handling code here:
        jTextFieldSearch.setText("");
    }//GEN-LAST:event_jTextFieldSearchMouseClicked

    private void unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitActionPerformed
        // TODO add your handling code here:
        manageUnit mu = new manageUnit();
        mu.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_unitActionPerformed

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseClicked

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        SelectItem();
        tableResizer();
    }//GEN-LAST:event_RefreshActionPerformed

    private void exportbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_exportbtnMouseClicked

    private void exportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportbtnActionPerformed
        // TODO add your handling code here:
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION){
            path = j.getSelectedFile().getPath();
        }
        
        Document doc = new Document();
        String fileName = "Inventory Summary.pdf";
        File file = new File(path + "/" + fileName);
        
        int i = 1;
        while (file.exists()) {
            fileName = "Inventory Summary(" + i + ").pdf";
            file = new File(path + "/" + fileName);
            i++;
        }
        
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(file));
            doc.addTitle("Inventory Summary");
            doc.open();
            
            Paragraph title = new Paragraph("Inventory Summary", 
                    FontFactory.getFont(FontFactory.HELVETICA, 24, Font.BOLD));
            title.setAlignment(Element.ALIGN_CENTER);
            title.setSpacingBefore(50);
            doc.add(title);
            
            PdfPTable tbl = new PdfPTable(7);
            tbl.setWidthPercentage(100);
            tbl.setTotalWidth(new float[] {180, 70, 55, 53, 56, 58, 56});
            tbl.setLockedWidth(true);
            tbl.setSpacingBefore(10);
            tbl.setSpacingAfter(10);
            tbl.getDefaultCell().setPadding(5);
            
            PdfPCell name = new PdfPCell(new Phrase("Item Name"));
            name.setHorizontalAlignment(Element.ALIGN_LEFT);
            tbl.addCell(name);
            PdfPCell cat = new PdfPCell(new Phrase("Category"));
            cat.setHorizontalAlignment(Element.ALIGN_CENTER);
            cat.setFixedHeight(30);
            tbl.addCell(cat);
            PdfPCell qty = new PdfPCell(new Phrase("Quantity"));
            qty.setHorizontalAlignment(Element.ALIGN_CENTER);
            qty.setFixedHeight(30);
            tbl.addCell(qty);
            PdfPCell unit = new PdfPCell(new Phrase("Unit"));
            unit.setHorizontalAlignment(Element.ALIGN_CENTER);
            unit.setFixedHeight(30);
            tbl.addCell(unit);
            PdfPCell cp = new PdfPCell(new Phrase("Cost Price ($)"));
            cp.setHorizontalAlignment(Element.ALIGN_CENTER);
            cp.setFixedHeight(35);
            tbl.addCell(cp);
            PdfPCell tc = new PdfPCell(new Phrase("Total cost ($)"));
            tc.setHorizontalAlignment(Element.ALIGN_CENTER);
            tc.setFixedHeight(35);
            tbl.addCell(tc);
            PdfPCell sp = new PdfPCell(new Phrase("Selling price ($)"));
            sp.setHorizontalAlignment(Element.ALIGN_CENTER);
            sp.setFixedHeight(35);
            tbl.addCell(sp);
            
            for(int a = 0; a < inventoryTable.getRowCount();a++){
                PdfPCell cell1 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,1).toString()));
                cell1.setFixedHeight(30);
                tbl.addCell(cell1);
                PdfPCell cell2 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,2).toString()));
                cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell2.setFixedHeight(30);
                tbl.addCell(cell2);
                PdfPCell cell3 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,3).toString()));
                cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell3.setFixedHeight(30);
                tbl.addCell(cell3);
                PdfPCell cell4 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,4).toString()));
                cell4.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell4.setFixedHeight(30);
                tbl.addCell(cell4);
                PdfPCell cell5 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,5).toString()));
                cell5.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell5.setFixedHeight(30);
                tbl.addCell(cell5);
                PdfPCell cell6 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,6).toString()));
                cell6.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell6.setFixedHeight(30);
                tbl.addCell(cell6);
                PdfPCell cell7 = new PdfPCell(new Phrase(inventoryTable.getValueAt(a,7).toString()));
                cell7.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell7.setFixedHeight(30);
                tbl.addCell(cell7);
                
            }
            doc.add(tbl);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(manageInventory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(manageInventory.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        doc.close();
        JOptionPane.showMessageDialog(this, "File is Exported\nPlease go check your "+path+" to see the file");
    }//GEN-LAST:event_exportbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Refresh;
    private javax.swing.JButton addbtn;
    private javax.swing.JButton categories;
    private javax.swing.JComboBox<String> categorycb;
    private javax.swing.JButton clearbtn;
    private javax.swing.JTextField cprice;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton exportbtn;
    private javax.swing.JButton importbtn;
    private javax.swing.JTextField iname;
    private javax.swing.JButton inventory;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JTextField itemid;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JButton logout;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField sprice;
    private javax.swing.JButton suppliers;
    private javax.swing.JButton unit;
    private javax.swing.JComboBox<String> unitcb;
    // End of variables declaration//GEN-END:variables
}
